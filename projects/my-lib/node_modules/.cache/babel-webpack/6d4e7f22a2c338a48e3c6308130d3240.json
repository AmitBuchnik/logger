{"ast":null,"code":"import { CONFIG } from '../const';\nimport { asyncScheduler } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./log.publishers.service\";\nimport * as i2 from \"../models/config\";\nexport let LogService = /*@__PURE__*/(() => {\n  class LogService {\n    constructor(config, publishersService) {\n      this.config = config;\n      this.publishersService = publishersService; // Set publishers\n\n      this.publishers = this.publishersService.getPublishers(this.config.targets);\n    }\n\n    log(message) {\n      if (this.canLog()) {\n        for (let logger of this.publishers) {\n          if (this.config.useQueue) {\n            const task = () => logger.log(message);\n\n            asyncScheduler.schedule(task, this.config.flushTiming);\n          } else {\n            logger.log(message);\n          }\n        }\n      }\n    }\n\n    canLog() {\n      var _a, _b;\n\n      return (_b = (_a = this.config) === null || _a === void 0 ? void 0 : _a.environment) === null || _b === void 0 ? void 0 : _b.production;\n    }\n\n  }\n\n  LogService.ɵfac = function LogService_Factory(t) {\n    return new (t || LogService)(i0.ɵɵinject(CONFIG), i0.ɵɵinject(i1.LogPublishersService));\n  };\n\n  LogService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: LogService,\n    factory: LogService.ɵfac,\n    providedIn: 'root'\n  });\n  return LogService;\n})();","map":null,"metadata":{},"sourceType":"module"}